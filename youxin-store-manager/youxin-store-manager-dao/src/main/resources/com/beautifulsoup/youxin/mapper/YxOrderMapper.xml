<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beautifulsoup.youxin.mapper.YxOrderMapper" >
  <resultMap id="BaseResultMap" type="com.beautifulsoup.youxin.pojo.YxOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_number" property="orderNumber" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="shipment_time" property="shipmentTime" jdbcType="TINYINT" />
    <result column="shipment_type" property="shipmentType" jdbcType="TINYINT" />
    <result column="shipment_amount" property="shipmentAmount" jdbcType="DECIMAL" />
    <result column="invoice_type" property="invoiceType" jdbcType="TINYINT" />
    <result column="invoice_title" property="invoiceTitle" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="buy_number" property="buyNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_number, user_id, pay_type, shipment_time, shipment_type, shipment_amount, 
    invoice_type, invoice_title, order_status, create_time, update_time, order_amount, 
    pay_amount, buy_number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.beautifulsoup.youxin.pojo.YxOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yx_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from yx_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from yx_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.beautifulsoup.youxin.pojo.YxOrderExample" >
    delete from yx_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.beautifulsoup.youxin.pojo.YxOrder" >
    insert into yx_order (id, order_number, user_id, 
      pay_type, shipment_time, shipment_type, 
      shipment_amount, invoice_type, invoice_title, 
      order_status, create_time, update_time, 
      order_amount, pay_amount, buy_number
      )
    values (#{id,jdbcType=BIGINT}, #{orderNumber,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{payType,jdbcType=TINYINT}, #{shipmentTime,jdbcType=TINYINT}, #{shipmentType,jdbcType=TINYINT}, 
      #{shipmentAmount,jdbcType=DECIMAL}, #{invoiceType,jdbcType=TINYINT}, #{invoiceTitle,jdbcType=VARCHAR}, 
      #{orderStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{orderAmount,jdbcType=DECIMAL}, #{payAmount,jdbcType=DECIMAL}, #{buyNumber,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.beautifulsoup.youxin.pojo.YxOrder" >
    insert into yx_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="shipmentTime != null" >
        shipment_time,
      </if>
      <if test="shipmentType != null" >
        shipment_type,
      </if>
      <if test="shipmentAmount != null" >
        shipment_amount,
      </if>
      <if test="invoiceType != null" >
        invoice_type,
      </if>
      <if test="invoiceTitle != null" >
        invoice_title,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="buyNumber != null" >
        buy_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="shipmentTime != null" >
        #{shipmentTime,jdbcType=TINYINT},
      </if>
      <if test="shipmentType != null" >
        #{shipmentType,jdbcType=TINYINT},
      </if>
      <if test="shipmentAmount != null" >
        #{shipmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="invoiceType != null" >
        #{invoiceType,jdbcType=TINYINT},
      </if>
      <if test="invoiceTitle != null" >
        #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyNumber != null" >
        #{buyNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.beautifulsoup.youxin.pojo.YxOrderExample" resultType="java.lang.Integer" >
    select count(*) from yx_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update yx_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNumber != null" >
        order_number = #{record.orderNumber,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.shipmentTime != null" >
        shipment_time = #{record.shipmentTime,jdbcType=TINYINT},
      </if>
      <if test="record.shipmentType != null" >
        shipment_type = #{record.shipmentType,jdbcType=TINYINT},
      </if>
      <if test="record.shipmentAmount != null" >
        shipment_amount = #{record.shipmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.invoiceType != null" >
        invoice_type = #{record.invoiceType,jdbcType=TINYINT},
      </if>
      <if test="record.invoiceTitle != null" >
        invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderAmount != null" >
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.buyNumber != null" >
        buy_number = #{record.buyNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update yx_order
    set id = #{record.id,jdbcType=BIGINT},
      order_number = #{record.orderNumber,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=TINYINT},
      shipment_time = #{record.shipmentTime,jdbcType=TINYINT},
      shipment_type = #{record.shipmentType,jdbcType=TINYINT},
      shipment_amount = #{record.shipmentAmount,jdbcType=DECIMAL},
      invoice_type = #{record.invoiceType,jdbcType=TINYINT},
      invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      buy_number = #{record.buyNumber,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.beautifulsoup.youxin.pojo.YxOrder" >
    update yx_order
    <set >
      <if test="orderNumber != null" >
        order_number = #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="shipmentTime != null" >
        shipment_time = #{shipmentTime,jdbcType=TINYINT},
      </if>
      <if test="shipmentType != null" >
        shipment_type = #{shipmentType,jdbcType=TINYINT},
      </if>
      <if test="shipmentAmount != null" >
        shipment_amount = #{shipmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="invoiceType != null" >
        invoice_type = #{invoiceType,jdbcType=TINYINT},
      </if>
      <if test="invoiceTitle != null" >
        invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyNumber != null" >
        buy_number = #{buyNumber,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.beautifulsoup.youxin.pojo.YxOrder" >
    update yx_order
    set order_number = #{orderNumber,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=TINYINT},
      shipment_time = #{shipmentTime,jdbcType=TINYINT},
      shipment_type = #{shipmentType,jdbcType=TINYINT},
      shipment_amount = #{shipmentAmount,jdbcType=DECIMAL},
      invoice_type = #{invoiceType,jdbcType=TINYINT},
      invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      buy_number = #{buyNumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>